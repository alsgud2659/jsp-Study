[계산기 만들기 실습]
1. calc.jsp, Oper.java(서블릿), Calc.java(클래스) 생성
2. calc.jsp에서 input태그로 수식 통채로를 입력받고 action은 Oper서블릿으로 설정해준다.
3. Calc.java 클래스에서 사칙연산 메소드를 정의하고 모두 두 정수를 전달받은 후 int로 리턴해준다.
4. 나눗셈 메소드에서는 분모가 0일 경우를 처리하지 않고 Oper.java 서블릿에서 나눗셈 메소드 사용 시 예외를 처리한다.
5. Oper.java 서블릿에서 전달받은 수식을 분석한 후 사칙연산 연산자에 맞게 Calc.java의 메소드를 호출하여 결과를 응답한다.
	※ request.getParameter("태그의 name 속성 값")으로 전달받은 값을 가져올 수 있다.
	※ 연산자를 split()으로 분리할 때에는 split("\\" + 연산자)로 사용해야 분리된다.
	※ 잘못 입력했을 때와 0으로 나눌 때 모두 예외처리를 사용하여 알맞는 메세지를 출력해준다.
6. Oper.java 서블릿에서 calc.jsp로 돌아갈 때에는 calc.jsp가 아닌 calc로 이동할 수 있도록 web.xml에서 servlet을 설정한다.
===================================================================================================================
디렉티브 태그(<%@ %>)
	
	- <%@ page%>
		현재 JSP페이지에 대한 정보를 설정하는 태그이다.
		되도록 페이지 최상단에 선언한다.

		1. language	: 현재 JSP페이지가 사용할 프로그래밍 언어
		2. contentType	: 현재 JSP 페이지가 생성할 문서의 콘텐츠 유형
		3. pageEncoding	: 현재 JSP 페이지의 문자 인코딩 설정
		4. import	: 현재 JSP 페이지에서 사용할 자바 패키지 및 클래스 설정
		5. session	: 현재 JSP 페이지에서 세션 사용 여부 설정
		6. info		: 현재 JSP 페이지에 대한 설명을 작성
		7. errorPage	: 현재 JSP 페이지에 오류가 발생했을 때 보여줄 오류 페이지 설정
		8. isErrorPage	: 현재 JSP 페이지가 오류 페이지인지 여부 설정

스크립트 태그
	- <%! %>: 선언문(declaration)
		자바 변수나 메소드를 정의하는 데 사용한다.

	- <% %>: 스크립틀릿(scriptlet)
		자바 변수 선언 및 자바 로직 코드를 작성한 데 사용한다.

	- <%= %>: 표현문(expression)
		변수, 계산식, 리턴이 있는 메소드 호출 결과를 문자열 형태로 출력
		표현문 안에 작성한 값은 out.print()메소드 안에 매개변수로 전달된다.





















