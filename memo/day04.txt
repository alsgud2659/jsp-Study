내장 객체
	객체화 없이 사용할 수 있는 객체이며, JSP파일이 서블릿으로
	변환될 때 웹 컨테이너가 자동으로 메모리에 할당하며 제공한다.

	request		: 웹 브라우저의 요청 정보를 저장
	response	: 웹 브라우저의 요청에 대한 응답 정보를 저장
	out		: JSP페이지 body에 출력할 내용 작성 시 사용
	session		: 하나의 웹 브라우저의 정보를 유지하기 위한 세션정보를 저장
	pageContext	: JSP페이지에 대한 정보를 저장
--------------------------------------------------------------------------
GET 방식과 POST 방식

- GET
	주소에 데이터를 추가하여 전달하는 방식.
	보통 쿼리 문자열(query string)에 포함되어 전송되므로, 길이에 제한이 있으며
	주소에 데이터가 보이므로 보안상 취약점이 존재한다.
	중요한 데이터 혹은 길이가 긴 데이터는 POST방식을 사용하여 요청하는 것이 좋지만
	GET방식이 POST방식보다 상대적으로 빠른 전송방식이다.

- POST
	데이터를 별도로 첨부(Header)하여 전달하는 방식.
	브라우저 히스토리에도 남지 않고 데이터는 쿼리 문자열과는 별도로 전송된다.
	따라서 데이터의 길이에 제한도 없으며, GET방식보다 보안성이 높다.
	하지만 GET방식 보다 상대적으로 느리다.
* 결론
	전송할 데이터의 양이 작고 노출되어도 무방하다면 GET방식을 사용하고
	전송할 데이터의 양이 크거나 노출이 되면 안될 데이터라면 POST방식을 사용한다.


















